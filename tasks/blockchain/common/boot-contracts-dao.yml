---
- name: "Set facts"
  set_fact:
    bc_haya_system_accounts:
      - eosio.bpay
      - eosio.msig
      - eosio.names
      - eosio.ram
      - eosio.ramfee
      - eosio.saving
      - eosio.stake
      - eosio.token
      - eosio.vpay
      - eosio.rex
    bc_haya_system_contracts:
      - { name: eosio.token, wasm_path: eosio.token/eosio.token.wasm, abi_path: eosio.token/eosio.token.abi }
      - { name: eosio.msig, wasm_path: eosio.msig/eosio.msig.wasm, abi_path: eosio.msig/eosio.msig.abi }
      - { name: eosio, wasm_path: eosio.system/eosio.system.wasm, abi_path: eosio.system/eosio.system.abi }

- include_tasks: "boot-common.yml"

- name: import bootstrap producer key into wallet
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    wallet import --private-key {{ bc_haya_boot.pvt_key }} && \
    touch {{ bc_path_state }}/importbootkey
  args:
    creates: "{{ bc_path_state }}/importbootkey"
  register: import_producer_key
  ignore_errors: true

- debug:
    msg: "{{ import_producer_key.stderr_lines }}"
  tags:
    - never
    - debug
- debug: var=import_producer_key.stdout_lines
  tags:
    - never
    - debug

- name: import all producer key into wallet
  loop: "{{ bc_haya_producer_accounts }}"
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    wallet import --private-key {{ item.pvt_key }} && \
    touch {{ bc_path_state }}/importprodkeys-{{ item.name }}
  args:
    creates: "{{ bc_path_state }}/importprodkeys-{{ item.name }}"
  register: import_all_producer_key
  ignore_errors: true
  when: bc_peers_ip|length > index + 1
  loop_control:
    index_var: index

- name: create system accounts
  loop: "{{ bc_haya_system_accounts }}"
  register: create_system_accounts
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    create account -x 45 eosio {{ item }} {{ bc_haya_boot.pub_key }} {{ bc_haya_boot.pub_key }} && \
    touch {{ bc_path_state }}/createsysacc-{{ item }}
  args:
    creates: "{{ bc_path_state }}/createsysacc-{{ item }}"
  changed_when: "'executed transaction' in create_system_accounts.stdout"


- name: Show stderr from create system accounts task
  debug:
    msg: "DEBUG: \n stderr:{{ item.stderr }}\n stdout:{{ item.stdout }}"
  loop: "{{ create_system_accounts.results }}"
  tags:
    - never
    - debug

- name: set abi system contracts
  loop: "{{ bc_haya_system_contracts }}"
  register: set_abi_system_contracts
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    set abi {{ item.name }} /host/{{ bc_path_contracts }}/{{ item.abi_path }} && \
    touch {{ bc_path_state }}/setabisyscontracts-{{ item.name }}
  args:
    chdir: "{{ bc_path_contracts }}"
    creates: "{{ bc_path_state }}/setabisyscontracts-{{ item.name }}"

- name: Show stderr from set abi system contracts task
  debug:
    msg: "DEBUG: \n stderr:{{ item.stderr }}\n stdout:{{ item.stdout }}"
  loop: "{{ set_abi_system_contracts.results }}"
  tags:
    - never
    - debug

- name: set code system contracts
  loop: "{{ bc_haya_system_contracts }}"
  register: set_code_system_contracts
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    set code {{ item.name }} /host/{{ bc_path_contracts }}/{{ item.wasm_path }} && \
    touch {{ bc_path_state }}/setcodesyscontracts-{{ item.name }}
  args:
    chdir: "{{ bc_path_contracts }}"
    creates: "{{ bc_path_state }}/setcodesyscontracts-{{ item.name }}"

- name: Show stderr from set code system contracts task
  debug:
    msg: "DEBUG: \n stderr:{{ item.stderr }}\n stdout:{{ item.stdout }}"
  loop: "{{ set_code_system_contracts.results }}"
  tags:
    - never
    - debug

- include_tasks: "boot-checks.yml"

- name: create token
  register: create_token
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    push action eosio.token create '["eosio", "{{ bc_haya_max_tokens_amount }} \
    BET"]' -p eosio.token && \
    touch {{ bc_path_state }}/createtoken
  args:
    creates: "{{ bc_path_state }}/createtoken"

- name: Show stderr from create token task
  debug:
    msg: "DEBUG: \n stderr:{{ create_token.stderr }}\n stdout:{{ create_token.stdout }}"
  tags:
    - never
    - debug

- name: allocate tokens
  register: allocate_tokens
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    push action eosio.token issue '["eosio", "{{ bc_haya_tokens_amount }} \
    BET", "memo"]' -p eosio && \
    touch {{ bc_path_state }}/allocatetokens
  args:
    creates: "{{ bc_path_state }}/allocatetokens"

- name: Show stderr from allocate tokens task
  debug:
    msg: "DEBUG: \n stderr:{{ allocate_tokens.stderr }}\n stdout:{{ allocate_tokens.stdout }}"
  tags:
    - never
    - debug

- name: Init system contracts
  register: init_system_contracts
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    push action eosio init '[0,"4,BET"]' -p eosio && \
    touch {{ bc_path_state }}/initsyscontracts-eosio
  args:
    creates: "{{ bc_path_state }}/initsyscontracts-eosio"
    chdir: "{{ bc_path_contracts }}"

- name: Show stderr from init system contracts task
  debug:
    msg: "DEBUG: \n stderr:{{ item.stderr }}\n stdout:{{ item.stdout }}"
  loop: "{{ init_system_contracts.results }}"
  tags:
    - never
    - debug

- name: Make eosio.msig a privileged account
  register: make_msig_privileged_account
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    push action eosio setpriv '["eosio.msig", 1]' -p eosio@active && \
    touch {{ bc_path_state }}/makemsigprivilegedaccaont-eosio
  args:
    creates: "{{ bc_path_state }}/makemsigprivilegedaccaont-eosio"
    chdir: "{{ bc_path_contracts }}"

- name: Show stderr from make eosio.msig a privileged account task
  debug:
    msg: "DEBUG: \n stderr:{{ item.stderr }}\n stdout:{{ item.stdout }}"
  loop: "{{ make_msig_privileged_account.results }}"
  tags:
    - never
    - debug

- name: Stake for vote
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    system delegatebw eosio eosio --buy-ram-bytes "10000000" "100.0000 BET" "100.0000 BET" "30000000.0000 BET" -p eosio && \
    touch {{ bc_path_state }}/stakevoting
  args:
    creates: "{{ bc_path_state }}/stakevoting"

- name: create producers account
  loop: "{{ bc_haya_producer_accounts }}"
  register: create_producers_account
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    system newaccount -x 45 eosio --transfer {{ item.name }} \
    {{ item.pub_key }} --stake-net "10.0000 BET" \
    --stake-cpu "10.0000 BET" --stake-vote "1000000.0000 BET" --buy-ram-kbytes 8192 && \
    touch {{ bc_path_state }}/createprodacc-{{ item.name }}
  args:
    creates: "{{ bc_path_state }}/createprodacc-{{ item.name }}"
  retries: 5
  delay: 3
  until: create_producers_account is success
  when: bc_peers_ip|length > index + 1
  loop_control:
    index_var: index

- name: Show stderr from create producers account task
  debug:
    msg: "DEBUG: \n stderr:{{ item.stderr }}\n stdout:{{ item.stdout }}"
  loop: "{{ create_producers_account.results }}"
  tags:
    - never
    - debug

- name: Reg producers account
  loop: "{{ bc_haya_producer_accounts }}"
  register: reg_producers_account
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    system regproducer {{ item.name }} {{ item.pub_key }} -p {{ item.name }} && \
    touch {{ bc_path_state }}/regprodacc-{{ item.name }}
  args:
    creates: "{{ bc_path_state }}/regprodacc-{{ item.name }}"
  when: bc_peers_ip|length > index + 1
  loop_control:
    index_var: index

- name: Form producers list
  loop: "{{ bc_haya_producer_accounts | list }}"
  set_fact:
    prods_for_vote: "{{ prods_for_vote|default('') + ' ' + item.name }}"
  when: bc_peers_ip|length > index + 1
  loop_control:
    index_var: index

- name: Vote producers account
  loop: "{{ bc_haya_producer_accounts }}"
  register: vote_producers_account
  shell: |
    {{ bc_haya_cli }} \
    --wallet-url=http://localhost:{{ bc_haya_wallet.port }} \
    --url=http://localhost:{{ bc_haya_node_http_port }} \
    system voteproducer prods eosio {{ prods_for_vote }} && \
    touch {{ bc_path_state }}/voteprodaccs
  args:
    creates: "{{ bc_path_state }}/voteprodaccs"
  when: bc_peers_ip|length > index + 1
  loop_control:
    index_var: index
